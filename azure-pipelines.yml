name: '0.0$(rev:.r)'

parameters:
- name: extension_id
  type: string
  default: buildah-toolkit
- name: publisher_id
  type: string
  default: cloudpup
- name: connected_service
  type: string
  default: VS Marketplace CloudPup
- name: share_with
  type: string
  default: joshuadmiller
- name: environment_beta
  type: string
  default: CloudPup Visual Studio Marketplace - Beta
- name: environment_production
  type: string
  default: CloudPup Visual Studio Marketplace - Prod

  

trigger:
- main
- feature/*

pr:
- main

pool:
  vmImage: 'windows-2019'
  demands: npm

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
  - job: 
    displayName: 'Build on Windows'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm run initdev
      displayName: 'Install Node dependencies'
    - task: Npm@1
      displayName: 'Build the extension'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run build'
    - task: TfxInstaller@3
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: '0.9.x'
        checkLatest: true
    - task: PackageAzureDevOpsExtension@3
      displayName: 'Package Extension: $(Build.SourcesDirectory)'
      name: 'packageStep'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        outputPath: '$(Build.ArtifactStagingDirectory)\${{ parameters.extension_id }}.vsix'
        publisherId: ${{ parameters.publisher_id }}
        extensionId: '${{ parameters.extension_id }}'
        extensionTag: '-build'
        extensionName: 'Azure DevOps Extension Tasks'
        extensionVersion: '$(Build.BuildNumber)'
        updateTasksVersion: true
        updateTasksVersionType: patch
        extensionVisibility: private
    - task: PublishPipelineArtifact@1
      displayName: 'Publish vsix'
      inputs:
        publishLocation: pipeline
        targetPath: '$(packageStep.Extension.OutputPath)'
        artifact: 'vsix'
      condition: succeededOrFailed()
- stage: PublishDev
  displayName: 'Publish Private Beta'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 'Build'
  jobs:
    - deployment: 
      environment: ${{ parameters.environment_beta }}
      strategy: 
        runOnce:
         deploy:
          steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - task: TfxInstaller@3
            displayName: 'Use Node CLI for Azure DevOps'
            inputs:
              version: '0.9.x'
              checkLatest: true
          - task: PublishAzureDevOpsExtension@3
            name: 'publishDev'
            inputs:              
              connectedServiceName: ${{ parameters.connected_service }}
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/vsix/${{ parameters.extension_id }}.vsix'
              publisherId: ${{ parameters.publisher_id }}
              extensionId: '${{ parameters.extension_id }}'
              extensionTag: '-beta'
              updateTasksVersion: false
              extensionVisibility: 'privatepreview'
              shareWith: ${{ parameters.share_with }}
              noWaitValidation: true
          - task: IsAzureDevOpsExtensionValid@3
            inputs:              
              connectedServiceName: ${{ parameters.connected_service }}
              method: 'vsix'
              vsixFile: '$(publishDev.Extension.OutputPath)'
          - task: PublishPipelineArtifact@1
            displayName: 'Publish vsix'
            inputs:
              publishLocation: pipeline
              targetPath: '$(publishDev.Extension.OutputPath)'
              artifact: 'beta'
            condition: succeededOrFailed()

- stage: PublishProd
  displayName: 'Publish Public'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: 'PublishDev'
  jobs:
    - deployment: 
      environment: ${{ parameters.environment_production }}
      strategy: 
        runOnce:
         deploy:
          steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
            
          - task: TfxInstaller@3
            displayName: 'Use Node CLI for Azure DevOps'
            inputs:
              version: '0.9.x'
              checkLatest: true
          - task: PublishAzureDevOpsExtension@3
            name: 'publishProd'
            inputs:              
              connectedServiceName: ${{ parameters.connected_service }}
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/vsix/${{ parameters.extension_id }}.vsix'
              publisherId: ${{ parameters.publisher_id }}
              extensionId: '${{ parameters.extension_id }}'
              updateTasksVersion: false
              extensionVisibility: 'public'
              noWaitValidation:  true          
          - task: IsAzureDevOpsExtensionValid@3
            inputs:              
              connectedServiceName: ${{ parameters.connected_service }}
              method: 'vsix'
              vsixFile: '$(publishProd.Extension.OutputPath)'
          - task: PublishPipelineArtifact@1
            displayName: 'Publish vsix'
            inputs:
              publishLocation: pipeline
              targetPath: '$(publishProd.Extension.OutputPath)'
              artifact: 'prod'
            condition: succeededOrFailed()